//1. Створити клас Людина.
//
// Властивості:
// імʼя;
// стать.
// Методи:
// конструктор, який приймає два параметри: імʼя та стать.
class Person {
    constructor(name, gender) {
        this.name = name;
        this.gender = gender;
    }
}

//2. Створити клас Квартира.
//
// Властивості:
// конструктор не потрібен;
// масив жителів, який при створенні пустий.
// Методи:
// додати жителя - метод повинен приймати екземпляр класу Людина, та додавати до масиву жителів.
class Flat {
    constructor() {
        this.villagers = [];
    }
    addVillager(person) {
        this.villagers.push(person);
    }
}

//3. Створити клас Будинок.
//
// Властивості:
// масив квартир, який при створенні пустий;
// максимальна кількість квартир.
// Методи:
// конструктор, який приймає один параметр: максимальну кількість квартир;
// додати квартиру - метод повинен приймати екземпляр класу Квартира, перевіряти, чи не буде кількість
// перевищувати максимальну кількість квартир, і якщо це так, додати квартиру,
// в іншому випадку виводить у консоль відповідне повідомлення.
class House {
    constructor(flatsMax) {
        this.flats = [];
        this.flatsMax = flatsMax;
    }
    addFlat(flat) {
        if (this.flats.length < this.flatsMax) {
            this.flats.push(flat);
            console.log("Додано.");
        } else {
            console.log("Перевищує максимальну кількість квартир.");
        }
    }
}

//В якості демонстраціїї створити:
//
// декілька екземплярів класу Людина;
let person1 = new Person("Svetka", "female");
let person2 = new Person("Ilushka", "male");
// декілька екземплярів класу Квартира;
let flat1 = new Flat();
let flat2 = new Flat();
// додадити екземпляри класу Людина до екземплярів класу Квартира;
flat1.addVillager(person1);
flat2.addVillager(person2);
// екземпляр класу Будинок;
let house = new House("3");
// додадити екземпляри класу Квартира до екземплярів класу Будинок.
house.addFlat(flat1);
house.addFlat(flat2);